{"version":3,"sources":["components/LogIn.js","components/Game.js","components/Finish.js","App.js","serviceWorker.js","index.js"],"names":["LogIn","props","NameOfPlayer","n","setState","name","target","value","state","CheckTheName","length","changeFlagValue","flagStatus","AllCards","computerCards","playerCards","className","style","color","fontWeight","onChange","this","placeholder","onClick","Component","Game","revealCard","all","x","y","i","clicker","click","console","log","playerlocation","playerindex","complocation","computerindex","playerrandomNuber","computerRandomCard","count1","counterplayer","count2","countercomp","Math","floor","random","whowin","win","undefined","Name","id","rank","suit","Finish","AnotherTry","winning","includes","width","height","App","nameOfPlayer","updateTheFlag","flag","updateWinner","w","winner","show","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"4NAGqBA,E,kDAEjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAsBVC,aAAa,SAACC,GACV,EAAKC,SAAS,CAAEC,KAAKF,EAAEG,OAAOC,QAC9B,EAAKN,MAAMI,KAAK,EAAKG,MAAMH,OAzBZ,EA2BnBI,aAAa,WACT,GAAG,EAAKD,MAAMH,KAAKK,OAAS,EAAE,CAC1B,IAAIP,EAAI,EAAKK,MAAMH,KACnB,EAAKJ,MAAMI,KAAKF,OAEhB,CAEA,EAAKF,MAAMI,KADL,aAjCK,EAqCnBM,gBAAgB,WACZ,EAAKV,MAAMW,WAAW,GACtB,EAAKH,gBApCL,EAAKD,MAAQ,CACTK,SAAS,CAAC,EAAE,EAAE,EAAE,EACZ,EAAE,EAAE,EAAE,EACN,EAAE,EAAE,EAAE,EACN,EAAE,EAAE,EAAE,EACN,EAAE,EAAE,EAAE,EACN,EAAE,EAAE,EAAE,EACN,EAAE,EAAE,EAAE,EACN,EAAE,EAAE,EAAE,EACN,EAAE,EAAE,EAAE,EACN,GAAG,GAAG,GAAG,GACT,GAAG,GAAG,GAAG,GACT,GAAG,GAAG,GAAG,GACT,GAAG,GAAG,GAAG,IACZR,KAAK,GACLS,cAAc,GACdC,YAAY,IAnBF,E,qDA2Cf,OACI,yBAAKC,UAAU,YAEf,wBAAIA,UAAU,YAAd,aAAmC,0BAAMC,MAAO,CAACC,MAAM,MAAOC,WAAW,WAAtC,QACnC,2BAAOH,UAAU,eAAeI,SAAUC,KAAKnB,aAAcoB,YAAY,oBACzE,6BACA,6BACC,4BAAQN,UAAU,oBAAoBO,QAASF,KAAKV,iBAApD,c,GApDsBa,a,gBCEdC,E,kDAEjB,WAAYxB,GAAQ,IAAD,8BACf,cAAMA,IA8BVyB,WAAW,SAACC,GACT,IAAIC,EAAEC,EAAEC,EACJC,EAAQ,EAAKvB,MAAMwB,MACvB,GAA6B,IAAzB,EAAKxB,MAAMK,SAAS,IAAmC,KAA1B,EAAKL,MAAMK,SAAS,KAAqB,KAAVkB,EAAc,CAC7EE,QAAQC,IAAI,MAEZH,IACD,EAAK3B,SAAS,CAAC4B,MAAMD,EAAUlB,SAASc,IAEnCM,QAAQC,IAAI,EAAK1B,MAAMK,UACvB,IAAIsB,EAAe,EAAK3B,MAAM4B,YAC1BC,EAAa,EAAK7B,MAAM8B,cAQvB,GAPA,EAAKlC,SAAS,CAACmC,kBAAkB,EAAK/B,MAAMK,SAASsB,KACtDA,GAA8B,EAC9B,EAAK/B,SAAS,CAACgC,YAAYD,IAC3B,EAAK/B,SAAS,CAACoC,mBAAmB,EAAKhC,MAAMK,SAASwB,KACtDA,GAA0B,EAC1B,EAAKjC,SAAS,CAACkC,cAAcD,IAC5BJ,QAAQC,IAAI,EAAK1B,MAAM4B,aACnB,EAAK5B,MAAM+B,kBAAkB,EAAK/B,MAAMgC,mBAAoB,CAC5D,IAAIC,EAAS,EAAKjC,MAAMkC,cACzBD,IACA,EAAKrC,SAAS,CAACsC,cAAcD,SAC1B,GAAG,EAAKjC,MAAMgC,mBAAmB,EAAKhC,MAAM+B,kBAAkB,CACpE,IAAII,EAAO,EAAKnC,MAAMoC,YACtBD,IACA,EAAKvC,SAAS,CAACwC,YAAYD,UAIpC,IAAIb,EAAEH,EAAIjB,OAAO,EAAGoB,EAAE,EAAEA,IACpBF,EAAEiB,KAAKC,MAAMD,KAAKE,UAAUjB,EAAE,IAC9BD,EAAEF,EAAIG,GACNH,EAAIG,GAAGH,EAAIC,GACXD,EAAIC,GAAGC,GAjEI,EAqEnBlB,gBAAgB,WACZsB,QAAQC,IAAI,EAAK1B,MAAMwB,OACD,IAAlB,EAAKxB,MAAMwB,OACX,EAAK/B,MAAMW,WAAW,GAE1BqB,QAAQC,IAAI,EAAK1B,MAAMkC,gBA1ER,EA6EtBM,OAAO,WAEJ,GAAI,EAAKxC,MAAMkC,cAAgB,EAAKlC,MAAMoC,YAAa,CAEnD,EAAK3C,MAAMgD,IADD,eAGV,CAEA,EAAKhD,MAAMgD,IADD,YAGd,EAAKtC,mBApFD,EAAKH,MAAQ,CACTyC,SAAIC,EACJhD,aAAaD,EAAMkD,KAElBtC,SAAS,CAAC,EAAE,EAAE,EAAE,EACT,EAAE,EAAE,EAAE,EACN,EAAE,EAAE,EAAE,EACN,EAAE,EAAE,EAAE,EACN,EAAE,EAAE,EAAE,EACN,EAAE,EAAE,EAAE,EACN,EAAE,EAAE,EAAE,EACN,EAAE,EAAE,EAAE,EACN,EAAE,EAAE,EAAE,EACN,GAAG,GAAG,GAAG,GACT,GAAG,GAAG,GAAG,GACT,GAAG,GAAG,GAAG,GACT,GAAG,GAAG,GAAG,IACjB0B,kBAAkB,EAClBC,mBAAmB,EAEnBI,YAAY,EACZF,cAAc,EACdN,YAAY,EACZE,cAAc,GACdN,MAAM,GA3BK,E,qDA0FT,IAAD,OACL,OACI,yBAAKhB,UAAU,kBACX,yBAAKA,UAAU,OACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,SAAQ,wBAAIA,UAAU,iBAAd,aACvB,yBAAKA,UAAU,UAEf,yBAAKA,UAAU,UACf,yBAAKoC,GAAG,QAAQpC,UAAU,SAAQ,kBAAC,IAAD,CAAMqC,KAAMhC,KAAKb,MAAMgC,mBAAoBc,KAAK,MAAlF,KACA,yBAAKtC,UAAU,UAEf,yBAAKA,UAAU,UACf,yBAAKoC,GAAG,QAAQpC,UAAU,SAA1B,IAAmC,kBAAC,IAAD,CAAMqC,KAAMhC,KAAKb,MAAM+B,kBAAmBe,KAAK,MAAlF,MACA,yBAAKtC,UAAU,SAAQ,4BAAQA,UAAU,oBAAoBO,QAAS,kBAAI,EAAKG,WAAW,EAAKlB,MAAMK,YAA9E,UAAyG,6BAAK,6BACrI,4BAAQG,UAAU,kBAAkBO,QAASF,KAAK2B,QAAlD,gBAEA,yBAAKhC,UAAU,UACf,yBAAKA,UAAU,SAAQ,wBAAIA,UAAU,eAAeK,KAAKb,MAAMN,eAC/D,yBAAKc,UAAU,UAEf,yBAAKA,UAAU,UAAf,W,GAjHkBQ,a,gBCDb+B,E,kDACjB,WAAYtD,GAAQ,IAAD,8BACf,cAAMA,IAMVuD,WAAa,WACX,EAAKvD,MAAMW,WAAW,IALpB,EAAKJ,MAAQ,GAHE,E,qDAWT,IAAD,OACL,OAAIa,KAAKpB,MAAMwD,QAAQC,SAAS,OACxB,yBAAK1C,UAAU,eACnB,kBAAC,IAAD,CACA2C,MAAO,KACPC,OAAQ,MAER,wBAAI3C,MAAO,CAACC,MAAM,UAAlB,sBACA,4BAAQF,UAAU,oBAAoBO,QAAS,kBAAK,EAAKiC,eAAzD,aAIC,yBAAKxC,UAAU,eACb,wBAAIA,UAAU,UAAUC,MAAO,CAACC,MAAM,UAAtC,aACA,4BAAQF,UAAU,oBAAoBO,QAAU,kBAAK,EAAKiC,eAA1D,mB,GA1BqBhC,aCIfqC,G,8DAErB,WAAY5D,GAAQ,IAAD,8BACjB,cAAMA,IAUR6D,aAAa,SAAC3D,GACZ,EAAKC,SAAS,CAACC,KAAKF,IACpB8B,QAAQC,IAAI,EAAK1B,MAAMH,OAbN,EAgBnB0D,cAAc,SAACnC,GACb,EAAKxB,SAAS,CAAC4D,KAAKpC,KAjBH,EAoBnBqC,aAAa,SAACC,GACZ,EAAK9D,SAAS,CAAC+D,OAAOD,IACtBjC,QAAQC,IAAI,EAAK1B,MAAM2D,SAtBN,EAwBnBC,KAAO,WACL,OAAsB,GAAnB,EAAK5D,MAAMwD,KAEV,6BACK,kBAAC,EAAD,CAAMf,IAAK,EAAKgB,aAAcrD,WAAY,EAAKmD,cAAeZ,KAAM,EAAK3C,MAAMH,QAI7D,GAAnB,EAAKG,MAAMwD,KAEf,6BACE,kBAAC,EAAD,CAAOpD,WAAY,EAAKmD,cAAe1D,KAAM,EAAKyD,gBAKtD,6BACI,kBAAC,EAAD,CAAQlD,WAAY,EAAKmD,cAAeN,QAAS,EAAKjD,MAAM2D,WAtClE,EAAK3D,MAAQ,CACVH,KAAK,GACL2D,KAAK,EACLG,OAAO,IANO,E,qDAiDf,OACE,yBAAKnD,UAAU,OACbK,KAAK+C,Y,GArDoB5C,cCIb6C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLrD,QAAQqD,MAAMA,EAAMC,a","file":"static/js/main.058eca7a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\n\r\nexport default class LogIn extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            AllCards:[1,1,1,1,\r\n                2,2,2,2,\r\n                3,3,3,3,\r\n                4,4,4,4,\r\n                5,5,5,5,\r\n                6,6,6,6,\r\n                7,7,7,7,\r\n                8,8,8,8,\r\n                9,9,9,9,\r\n                10,10,10,10,\r\n                11,11,11,11,\r\n                12,12,12,12,\r\n                13,13,13,13],\r\n             name:\"\",\r\n             computerCards:[],\r\n             playerCards:[],\r\n        }\r\n    }\r\n \r\n    NameOfPlayer=(n)=>{\r\n        this.setState({ name:n.target.value })\r\n        this.props.name(this.state.name)  \r\n    }\r\n    CheckTheName=()=>{\r\n        if(this.state.name.length > 0){\r\n            let n = this.state.name\r\n            this.props.name(n)  \r\n        }\r\n        else{\r\n            let x=\"unknown\"\r\n            this.props.name(x)\r\n        }\r\n    }\r\n    changeFlagValue=()=>{\r\n        this.props.flagStatus(1)\r\n        this.CheckTheName()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"logindiv\">\r\n                \r\n            <h1 className=\"wartitle\">Ready for <span style={{color:\"red\", fontWeight:\"bolder\"}}>war</span></h1>\r\n            <input className=\"namelocation\" onChange={this.NameOfPlayer} placeholder=\"Enter your name\"/>\r\n            <br/>\r\n            <br/>\r\n             <button className=\"btn btn-secondary\" onClick={this.changeFlagValue}>Start</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Card from 'react-playing-card';\r\n\r\n\r\n\r\nexport default class Game extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            win:undefined,\r\n            NameOfPlayer:props.Name,\r\n            // {card= \"A\" , symbol=\"S\"}\r\n             AllCards:[1,1,1,1,\r\n                    2,2,2,2,\r\n                    3,3,3,3,\r\n                    4,4,4,4,\r\n                    5,5,5,5,\r\n                    6,6,6,6,\r\n                    7,7,7,7,\r\n                    8,8,8,8,\r\n                    9,9,9,9,\r\n                    10,10,10,10,\r\n                    11,11,11,11,\r\n                    12,12,12,12,\r\n                    13,13,13,13],\r\n            playerrandomNuber:0,\r\n            computerRandomCard:0,\r\n            \r\n            countercomp:0,\r\n            counterplayer:0,\r\n            playerindex:0,\r\n            computerindex:51,\r\n            click:0\r\n        }\r\n    }\r\n \r\n    revealCard=(all)=>{\r\n       var x,y,i\r\n       let clicker=this.state.click\r\n       if (this.state.AllCards[0]!==1&& this.state.AllCards[51]!==13&& clicker!==26) {\r\n        console.log(\"in\");\r\n        \r\n        clicker++\r\n       this.setState({click:clicker , AllCards:all})\r\n            // this.setState({AllCards:all})\r\n            console.log(this.state.AllCards);\r\n            var playerlocation=this.state.playerindex\r\n            var complocation=this.state.computerindex\r\n                 this.setState({playerrandomNuber:this.state.AllCards[playerlocation]})\r\n                playerlocation=playerlocation+1\r\n                this.setState({playerindex:playerlocation})\r\n                this.setState({computerRandomCard:this.state.AllCards[complocation]}) \r\n                complocation=complocation-1                \r\n                this.setState({computerindex:complocation})          \r\n                 console.log(this.state.playerindex);\r\n                 if (this.state.playerrandomNuber>this.state.computerRandomCard) {\r\n                     let count1 = this.state.counterplayer\r\n                    count1++\r\n                    this.setState({counterplayer:count1})\r\n                 }else if(this.state.computerRandomCard>this.state.playerrandomNuber){\r\n                 let count2=this.state.countercomp\r\n                 count2++\r\n                 this.setState({countercomp:count2})\r\n                 }\r\n       }else{\r\n      \r\n        for(i=all.length-1; i>0;i--){\r\n            x=Math.floor(Math.random()*(i+1))\r\n            y=all[i]\r\n            all[i]=all[x]\r\n            all[x]=y\r\n        }\r\n       }\r\n    }\r\n    changeFlagValue=()=>{\r\n        console.log(this.state.click);\r\n        if (this.state.click==26) {\r\n            this.props.flagStatus(3) \r\n        }\r\n        console.log(this.state.counterplayer);\r\n    }\r\n\r\n whowin=()=>{\r\n    \r\n    if (this.state.counterplayer > this.state.countercomp) {\r\n        let title=\"you win\"\r\n        this.props.win(title)\r\n    }\r\n    else{\r\n        let title=\"you lose\"\r\n        this.props.win(title)\r\n    } \r\n    this.changeFlagValue()\r\n }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"container game\">\r\n                <div className=\"row\">\r\n                <div className=\"col-2\"></div>\r\n                <div className=\"col-3\"><h2 className=\"computertitle\">Computer</h2></div>\r\n                <div className=\"col-7\"></div>\r\n                \r\n                <div className=\"col-3\"></div>\r\n                <div id=\"cardd\" className=\"col-2\"><Card rank={this.state.computerRandomCard} suit=\"S\" /> </div>\r\n                <div className=\"col-7\"></div>\r\n\r\n                <div className=\"col-7\"></div>\r\n                <div id=\"cardd\" className=\"col-2\"> <Card rank={this.state.playerrandomNuber} suit=\"S\" />  </div>\r\n                <div className=\"col-2\"><button className=\"btn btn-secondary\" onClick={()=>this.revealCard(this.state.AllCards)} >Reveal</button><br/><br/>\r\n                <button className=\"btn btn-warning\" onClick={this.whowin}>See who won</button></div>\r\n\r\n                <div className=\"col-7\"></div>\r\n                <div className=\"col-3\"><h1 className=\"playertitle\">{this.state.NameOfPlayer}</h1></div>\r\n                <div className=\"col-2\"></div>\r\n\r\n                <div className=\"col-12\"> </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Confetti from 'react-confetti';\r\n\r\n\r\nexport default class Finish extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    AnotherTry = () => {\r\n      this.props.flagStatus(2)\r\n    }\r\n    \r\n    render() {\r\n        if (this.props.winning.includes(\"win\")) {\r\n          return<div className=\"finishStyle\">\r\n            <Confetti \r\n            width={1200}\r\n            height={650}\r\n            />\r\n            <h1 style={{color:\"white\"}}>YOU ARE THE WINNER</h1>\r\n            <button className=\"btn btn-secondary\" onClick={()=> this.AnotherTry()}>ONE MORE</button>\r\n            </div>   \r\n        \r\n        }else{ return (\r\n             <div className=\"finishStyle\">\r\n               <h1 className=\"winname\" style={{color:\"white\"}}>YOU LOSE </h1> \r\n               <button className=\"btn btn-secondary\" onClick= {()=> this.AnotherTry()}> Try again</button>\r\n            </div>\r\n        )\r\n        }\r\n    \r\n    }\r\n}\r\n","import React, { Component } from 'react';\nimport LogIn from './components/LogIn.js';\nimport Game from './components/Game.js';\nimport Finish from './components/Finish.js';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n// import {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\n\nexport default class App extends Component {\n\nconstructor(props) {\n  super(props)\n\n  this.state = {\n     name:\"\",\n     flag:2,\n     winner:\"\"\n\n  }\n}\n\nnameOfPlayer=(n)=>{\n  this.setState({name:n})\n  console.log(this.state.name);\n  \n}\nupdateTheFlag=(x)=>{\n  this.setState({flag:x})\n  // console.log(this.state.flag);\n}\nupdateWinner=(w)=>{\n  this.setState({winner:w})\n  console.log(this.state.winner);\n}\nshow = () =>{\n  if(this.state.flag == 1){\n    return (\n      <div>\n           <Game win={this.updateWinner} flagStatus={this.updateTheFlag} Name={this.state.name}/>\n      </div>\n    )\n  }\n  else if(this.state.flag == 2){\n    return (\n      <div>\n        <LogIn flagStatus={this.updateTheFlag} name={this.nameOfPlayer}/>\n      </div>\n    )\n  }else{\n    return(\n    <div>\n        <Finish flagStatus={this.updateTheFlag} winning={this.state.winner}/>\n      </div>\n    )\n  }\n}\n\n\n  render() {\n    return (\n      <div className=\"App\">\n       {this.show()}\n      </div>\n    )\n  }\n}\n\n\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}